'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _angular = require('angular');

var _angular2 = _interopRequireDefault(_angular);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Stolen from ReactCOMComponent (it does not expose it)
function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var ReactAngular = function (_React$Component) {
  _inherits(ReactAngular, _React$Component);

  function ReactAngular() {
    _classCallCheck(this, ReactAngular);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ReactAngular).apply(this, arguments));
  }

  _createClass(ReactAngular, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props;
      var controller = _props.controller;
      var controllerAs = _props.controllerAs;
      var inject = _props.inject;
      var isolate = _props.isolate;
      var scope = _props.scope;
      var template = _props.template;
      var templateUrl = _props.templateUrl;


      var parentScope = this.$element.scope();
      var $injector = this.$element.injector();

      var $controller = $injector.get('$controller');
      var $compile = $injector.get('$compile');
      var $rootScope = $injector.get('$rootScope');
      var $templateCache = $injector.get('$templateCache');

      this.$scope = scope ? parentScope.$new(isolate) : parentScope;

      if (_angular2.default.isObject(scope)) {
        _angular2.default.extend(this.$scope, scope);
      }

      var actualTemplateFunc = template || (templateUrl ? $templateCache.get(templateUrl) : null);

      var actualTemplate = _angular2.default.isFunction(actualTemplateFunc) ? actualTemplateFunc(inject) : actualTemplateFunc;

      if (controller) {
        var instantiatedController = $controller(controller, _extends({}, inject, {
          $scope: this.$scope,
          $element: this.$element
        }));

        if (controllerAs) {
          this.$scope[controllerAs] = instantiatedController;
        }
      }

      if (actualTemplate) {
        this.$element.append(actualTemplate);
      }

      $compile(this.$element)(this.$scope);
      $rootScope.$evalAsync();
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate() {
      return false;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props2 = this.props;
      var wrapperTag = _props2.wrapperTag;
      var className = _props2.className;
      var wrapperAttrs = _props2.wrapperAttrs;
      var children = _props2.children;

      var ref = function ref(element) {
        return _this2.$element = _angular2.default.element(element);
      };

      if (children) {
        if (!_react2.default.isValidElement(children)) {
          throw new Error('Only one child is allowed in AngularTemplate.\n          Found ' + children.length + ': ' + children.map(function (_ref) {
            var type = _ref.type;
            return type;
          }).join(', ') + '.');
        }

        var _classesKey = isCustomComponent(children.type, children.props) ? 'class' : 'className';
        var _classes = _defineProperty({}, _classesKey, [className || '', children.props.className || '', children.props['class'] || ''].join(' ').trim() || undefined);

        var child = _react2.default.cloneElement(children, _extends({}, wrapperAttrs, {
          ref: ref
        }, _classes));

        return child;
      }

      var classesKey = isCustomComponent(wrapperTag, wrapperAttrs) ? 'class' : 'className';
      var classes = _defineProperty({}, classesKey, [className || '', wrapperAttrs.className || '', wrapperAttrs['class'] || ''].join(' ').trim() || undefined);

      return _react2.default.createElement(wrapperTag, _extends({}, wrapperAttrs, {
        ref: ref
      }, classes), '');
    }
  }]);

  return ReactAngular;
}(_react2.default.Component);

exports.default = ReactAngular;


ReactAngular.propTypes = {
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,
  controller: _react.PropTypes.any,
  controllerAs: _react.PropTypes.string,
  inject: _react.PropTypes.object,
  isolate: _react.PropTypes.bool,
  scope: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
  template: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
  templateUrl: _react.PropTypes.string,
  wrapperTag: _react.PropTypes.string,
  wrapperAttrs: _react.PropTypes.object
};

ReactAngular.defaultProps = {
  inject: {},
  isolate: false,
  scope: true,
  wrapperTag: 'div',
  wrapperAttrs: {}
};
//# sourceMappingURL=angularTemplate.js.map